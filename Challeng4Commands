//USING BASH IN VSCODE

//create the namespace for our apps in aks cluster
kubectl create namespace tripinsightsweb

kubectl create namespace tripinsightsapi

//apply deployment 
kubectl apply -f poi-api-deployment.yaml


trips-api-deployment

//Create an AD group
az ad group create --display-name ch3AKSAdminGroup --mail-nickname ch3AKSAdminGroup

//Add members
In Azure Portal: Azure Active Directory > Groups > ch3AKSAdminGroup > Members > Add members

//Create some local variables 
REGION_NAME=northeurope
RESOURCE_GROUP=challenge3
SUBNET_NAME=vm-subnet
VNET_NAME=vnet
AKS_CLUSTER_NAME=aksworkshop-3
VERSION=$(az aks get-versions \
  --location $REGION_NAME \
  --query 'orchestrators[?!isPreview] | [-1].orchestratorVersion' \
  --output tsv)

//Test connectivity
//Get Creds
az aks get-credentials --resource-group challenge3 --name aksworkshop-3

//Test connection
kubectl run -it busybox --image=busybox -- sh
ping internal-vm


// GET AKS CLUSTER OBJECT ID
AKS_ID=$(az aks show \
    --resource-group $RESOURCE_GROUP \
    --name $AKS_CLUSTER_NAME \
    --query id -o tsv)



//Create 2 groups in AAD one for each type of User and get the object id for the group

--api group id
"objectId": "9dc30127-44ba-48ae-b2a5-0bbe09e2da04",

--web group ID
 "objectId": "13427e8a-5468-4a9c-838b-7e24e0a9a0e3",


//create a role assignment for each group that joins the group to the AKS service cluster user role

 az role assignment create \
  --assignee "9dc30127-44ba-48ae-b2a5-0bbe09e2da04" \
  --role "Azure Kubernetes Service Cluster User Role" \
  --scope "/subscriptions/ada6875d-873b-40ea-bc55-e9f261d050ad/resourcegroups/challenge3/providers/Microsoft.ContainerService/managedClusters/aksworkshop-3"

   az role assignment create \
  --assignee "13427e8a-5468-4a9c-838b-7e24e0a9a0e3" \
  --role "Azure Kubernetes Service Cluster User Role" \
  --scope "/subscriptions/ada6875d-873b-40ea-bc55-e9f261d050ad/resourcegroups/challenge3/providers/Microsoft.ContainerService/managedClusters/aksworkshop-3"


//apply the role bindings
kubectl apply -f rolebindings.yaml

// create a key vault in azure same rg and region as AKS cluster
// create an app registration in AAD and create a secret
// give the app registation permissions to the keyvault secrets
// create a secrets store with the app regsitration created above
kubectl create secret generic secrets-store-creds --from-literal clientid=8e50d224-e737-4d2f-8739-999fafa49c69 --from-literal clientsecret=.-er_e77E~52AAuS34-5dM36pSmntl.RQ9 -n tripinsightsapi

//create a secrets yaml file and apply it

//update our deployment yaml files and apply them referencing the secret creds store

